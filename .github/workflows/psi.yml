name: ðŸš€ Coleta PSI

on:
  schedule:
    - cron: '0 3 * * *'    # todo dia Ã s 03:00 UTC
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PSI_KEY: ${{ secrets.PSI_KEY }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install deps
        run: npm ci

      - name: Coletar dados PSI
        run: node collect-psi.js

      - name: Handle PSI Collection Errors
        if: always()
        run: |
          if [ -f psi_errors.log ] && [ -s psi_errors.log ]; then
            echo "PSI collection errors found. Preparing TODO.md."
            echo "HAS_PSI_ERRORS=true" >> $GITHUB_ENV
          else
            echo "No PSI collection errors found."
            echo "HAS_PSI_ERRORS=false" >> $GITHUB_ENV
          fi

      - name: Create/Update TODO.md if errors exist
        if: env.HAS_PSI_ERRORS == 'true'
        run: |
          echo "## PSI Collection Errors - $(date -u +"%Y-%m-%d %H:%M:%S UTC")" > TODO.md
          echo "" >> TODO.md
          echo "The following errors were encountered during the PSI data collection:" >> TODO.md
          cat psi_errors.log >> TODO.md
          echo "" >> TODO.md
          echo "Workflow run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> TODO.md

      - name: Commit and Push TODO.md if errors exist
        if: env.HAS_PSI_ERRORS == 'true'
        run: |
          ORIGINAL_BRANCH="${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          echo "Original branch: $ORIGINAL_BRANCH"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com" # Recommended email for bot
          git fetch origin # Fetch all remote branches and tags

          ERROR_BRANCH="psi-error-reports"

          # Check if branch exists locally or remotely
          if git rev-parse --verify $ERROR_BRANCH > /dev/null 2>&1; then
            echo "Branch '$ERROR_BRANCH' exists locally."
            git checkout $ERROR_BRANCH
            # Try to pull, but allow failure if it's a new local branch not yet on remote or if there are no tracking refs
            git pull origin $ERROR_BRANCH || echo "Pull failed or no remote tracking for $ERROR_BRANCH, proceeding."
          elif git rev-parse --verify origin/$ERROR_BRANCH > /dev/null 2>&1; then
            echo "Branch '$ERROR_BRANCH' exists on remote. Checking out and tracking."
            git checkout -b $ERROR_BRANCH origin/$ERROR_BRANCH
          else
            echo "Branch '$ERROR_BRANCH' does not exist locally or on remote. Creating new branch."
            git checkout -b $ERROR_BRANCH
          fi

          git add TODO.md
          # Check if there are changes to commit to avoid empty commit error
          if ! git diff --staged --quiet; then
            git commit -m "docs: Log PSI collection errors for review

            Errors were detected during the scheduled PSI data collection.
            Details have been added to TODO.md for manual review and action.

            Workflow run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            git push origin $ERROR_BRANCH
          else
            echo "No changes to commit in TODO.md or TODO.md was not created."
          fi

          echo "Switching back to original branch: $ORIGINAL_BRANCH"
          git checkout $ORIGINAL_BRANCH
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit e push dos resultados
        # This step runs on the original branch (e.g., main) due to the checkout in the previous step
        run: |
          if [ -f "data/psi-results.json" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com" # Recommended email
            git add data/psi-results.json
            # Only commit if there are changes to psi-results.json
            if ! git diff --staged --quiet; then
              git commit -m "chore: atualiza PSI data"
              git push
            else
              echo "No changes to data/psi-results.json to commit."
            fi
          else
            echo "data/psi-results.json not found. Skipping commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup temporary error log
        if: always()
        run: rm -f psi_errors.log
